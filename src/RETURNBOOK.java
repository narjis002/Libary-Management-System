import dao.Dbconnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;


public class RETURNBOOK extends javax.swing.JFrame {

    private String dueDate;
    private String issueDate;

    /**
     * Creates new form RETURNBOOK
     */
    public RETURNBOOK() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        returntbtn = new javax.swing.JButton();
        searchbtn = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        issuedate = new javax.swing.JTextField();
        duedate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(325, 125));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("BOOK ID");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 107, -1, -1));

        jButton4.setBackground(new java.awt.Color(255, 255, 204));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red-x-mark-transparent-background-3.png"))); // NOI18N
        jButton4.setText("CLOSE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 318, 106, -1));

        returntbtn.setBackground(new java.awt.Color(255, 255, 204));
        returntbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        returntbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/return book png.png"))); // NOI18N
        returntbtn.setText("RETURN");
        returntbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returntbtnActionPerformed(evt);
            }
        });
        getContentPane().add(returntbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 316, 121, -1));

        searchbtn.setBackground(new java.awt.Color(255, 255, 204));
        searchbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchbtn.setText("SEARCH");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 152, -1, -1));

        jTextField5.setBackground(new java.awt.Color(255, 255, 204));
        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 104, 278, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("ISSUE DATE");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 208, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("STUDENT ID");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 157, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("DUE DATE");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 256, -1, -1));

        jTextField7.setBackground(new java.awt.Color(255, 255, 204));
        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 154, 278, -1));

        issuedate.setBackground(new java.awt.Color(255, 255, 204));
        issuedate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(issuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 205, 278, -1));

        duedate.setBackground(new java.awt.Color(255, 255, 204));
        duedate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(duedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 256, 278, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/123456.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void returntbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returntbtnActionPerformed
                                          
    String bookID = jTextField5.getText().trim();
    String studentID = jTextField7.getText().trim();  

    // Validate that bookID and studentID are not empty
    if (bookID.isEmpty() || studentID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter both Book ID and Student ID.");
        return;
    }

    // Validate studentID is a valid integer
    int studentIDInt;
    try {
        studentIDInt = Integer.parseInt(studentID);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid Student ID. Please enter a valid number.");
        return;
    }

    // Confirmation dialog before returning the book
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to return this book?", 
        "Confirm Return", 
        JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }

    try (Connection connection = Dbconnection.getConnection()) {
        connection.setAutoCommit(false); // Start transaction

        // Update the `issuebook` table to mark the book as returned
        String updateIssueBookQuery = "UPDATE issuebook SET returnBook = 'yes' WHERE book_id = ? AND student_id = ?";
        try (PreparedStatement updateStmt = connection.prepareStatement(updateIssueBookQuery)) {
            updateStmt.setString(1, bookID);
            updateStmt.setInt(2, studentIDInt);

            int rowsAffected = updateStmt.executeUpdate();

            if (rowsAffected > 0) {
                // Insert return details into `returnbook`
                String insertReturnBookQuery = "INSERT INTO returnbook (bookid, studentid, issuedate, duedate) VALUES (?, ?, ?, ?)";
                try (PreparedStatement insertStmt = connection.prepareStatement(insertReturnBookQuery)) {
                    insertStmt.setString(1, bookID);
                    insertStmt.setInt(2, studentIDInt);
                    insertStmt.setString(3, issuedate.getText());
                    insertStmt.setString(4, duedate.getText());
                    insertStmt.executeUpdate();
                }

                // Delete record from `issuebook` if necessary
                String deleteIssueBookQuery = "DELETE FROM issuebook WHERE book_id = ? AND student_id = ?";
                try (PreparedStatement deleteStmt = connection.prepareStatement(deleteIssueBookQuery)) {
                    deleteStmt.setString(1, bookID);
                    deleteStmt.setInt(2, studentIDInt);
                    deleteStmt.executeUpdate();
                }

                connection.commit(); // Commit the transaction

                JOptionPane.showMessageDialog(this, "Book successfully returned and records updated!");
                
                // Clear input fields
                jTextField5.setText("");
                jTextField7.setText("");
                issuedate.setText("");
                duedate.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Book return failed. Please check the details.");
                connection.rollback(); // Rollback in case of failure
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
    }                      
    }//GEN-LAST:event_returntbtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        String bookID = jTextField5.getText();
        String studentID=jTextField7.getText();// Get the entered Book ID
            try (Connection connection = Dbconnection.getConnection()){;
                String query = "SELECT * FROM issuebook WHERE book_id = ?";
                PreparedStatement stmt = connection.prepareStatement(query);
                stmt.setString(1, bookID);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    jTextField7.setText(rs.getString("student_id"));
                    issuedate.setText(rs.getString("issuedate"));
                    duedate.setText(rs.getString("duedate"));
                } else {
                    JOptionPane.showMessageDialog(this, "No book found with the given Book ID.");
                }

                rs.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error during search: " + e.getMessage());
            }

    }//GEN-LAST:event_searchbtnActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RETURNBOOK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RETURNBOOK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RETURNBOOK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RETURNBOOK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RETURNBOOK().setVisible(true);
            }
 });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField duedate;
    private javax.swing.JTextField issuedate;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JButton returntbtn;
    private javax.swing.JButton searchbtn;
    // End of variables declaration//GEN-END:variables
}
